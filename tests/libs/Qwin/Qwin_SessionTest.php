<?php
ob_start();
require_once dirname(__FILE__) . '/../../../libs/Qwin.php';

/**
 * Test class for Qwin_Session.
 * Generated by PHPUnit on 2012-02-08 at 03:57:51.
 */
class Qwin_SessionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Qwin_Session
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     * 
     * @covers Qwin_Session::__construct
     * @covers Qwin_Session::start
     */
    protected function setUp()
    {
        $this->object = Qwin::getInstance()->session;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Qwin_Session::option
     */
    public function testOption()
    {
        $widget = $this->object;

        $widget->option('name', 'new_session');

        $this->assertEquals('new_session', $widget->option('name'));
    }

    /**
     * @covers Qwin_Session::setNamespaceOption
     */
    public function testSetNamespaceOption()
    {
        $widget = $this->object;

        $widget->setNamespaceOption('test');

        $this->assertEquals('test', $widget->option('namespace'));
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testStart().
     */
    public function testStart()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Qwin_Session::isStarted
     */
    public function testIsStarted()
    {
        $widget = $this->object;

        $this->assertTrue($widget->isStarted());
    }

    /**
     * @covers Qwin_Session::set
     * @covers Qwin_Session::get
     */
    public function testSet()
    {
        $widget = $this->object;

        $widget->set('action', 'test');

        $this->assertEquals('test', $widget->get('action'));
    }

    /**
     * @covers Qwin_Session::clear
     */
    public function testClear()
    {
        $widget = $this->object;

        $widget->set('action', 'clear');

        $widget->clear();

        $this->assertEquals(null, $widget->get('action'));

        $widget->clear('other namespace');
    }

    /**
     * @covers Qwin_Session::destroy
     */
    public function testDestroy()
    {
        $widget = $this->object;

        $widget->set('action', 'clear');

        $widget->destroy();

        $this->assertEquals(null, $widget->get('action'));
    }
}
