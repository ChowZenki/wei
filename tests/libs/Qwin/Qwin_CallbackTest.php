<?php
require_once dirname(__FILE__) . '/../../../libs/Qwin.php';
require_once dirname(__FILE__) . '/../../../libs/Qwin/Callback.php';

/**
 * Test class for Qwin_Callback.
 * Generated by PHPUnit on 2012-01-18 at 09:10:04.
 */
class Qwin_CallbackTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Qwin_Callback
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Qwin_Callback;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Qwin_Callback::call
     * @covers Qwin_IsCallable::call
     */
    public function testCall() {
        $widget = $this->object;

        $this->assertEquals('callback1', $widget->callback(array($this, 'callbackTest')), 'method callback test');

        $this->assertEquals('callback2', $widget->callback('callbackTest2'), 'function callback test');

        $this->assertEquals('callback3', $widget->callback(array(__CLASS__, 'callbackTest3')), 'static method callabck test');

        $this->assertEquals(array(
            'key' => 'value'
         ), $widget->callback(array($this, 'callbackWithParams'), array(array('key' => 'value'))), 'callback with params');

        $this->assertEquals('callback4', $widget->callback("function(){
            return 'callback4';
        }"), 'string function for php < 5.3');

        $this->setExpectedException('Qwin_Exception', 'Parameter 1 should be a valid callback');

        $widget->callback(array('not', 'callabled', 'struct'));
    }

    public function callbackTest()
    {
        return 'callback1';
    }

    public static function callbackTest3()
    {
        return 'callback3';
    }

    public function callbackWithParams($params)
    {
        return $params;
    }
}

/**
 * Function for callback test
 *
 * @return string
 */
function callbackTest2()
{
    return 'callback2';
}