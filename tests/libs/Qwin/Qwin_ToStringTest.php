<?php

require_once dirname(__FILE__) . '/../../../libs/Qwin.php';
require_once dirname(__FILE__) . '/../../../libs/Qwin/ToString.php';

/**
 * Test class for Qwin_ToString.
 * Generated by PHPUnit on 2012-01-18 at 09:09:41.
 */
class Qwin_ToStringTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Qwin_ToString
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Qwin_ToString;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Qwin_ToString::call
     */
    public function testCall() {
        $object = $this->object;

        $object->souce = 10.6;

        $this->assertInternalType('string', $object->toString(), 'Int to string');

        $object->source = true;

        $this->assertInternalType('string', $object->toString(), 'Bool to string');

        $object->source = null;

        $this->assertInternalType('string', $object->toString(), 'Null to string');

        $this->assertEmpty($object->toString(), 'Null to strig is empty');

        $object->source = array(
            'key' => 'value',
            'key2' => 'value2',
            'key3' => array('value3'),
        );

        $this->assertInternalType('string', $object->toString(), 'Array to string');

        // how about class without method __toString() ?
        $object->source = Qwin::getInstance()->variable();

        $this->assertInternalType('string', $object->toString(), 'Object to string');
    }

}

?>
