<?php
require_once dirname(__FILE__) . '/../../../libs/Qwin.php';
require_once dirname(__FILE__) . '/../../../libs/Qwin/IsLength.php';

/**
 * Test class for Qwin_IsLength.
 * Generated by PHPUnit on 2012-01-18 at 09:09:39.
 */
class Qwin_IsLengthTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Qwin_IsLength
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Qwin_IsLength;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Qwin_IsLength::call
     */
    public function testCall() {
        $widget = $this->object;

        $this->assertTrue($widget->isLength('length7', 7), 'Length is 7');

        $this->assertTrue($widget->isLength('length7', 0, 10), 'Length between 0 and 10, or said length less than 10');

        $this->assertTrue($widget->isLength('length7', 5, 0), 'Length greater than 5');

        $this->assertFalse($widget->isLength('length7', 0), 'Length is not 0');

        $this->assertFalse($widget->isLength('length7', -2, -1), 'Length should be positive, so always be false');

        $this->assertFalse($widget->isLength('length7', 10, 0), 'Length should not greater than 10');

        /*$widget->source = array(
            'one apple', 'two pears', 'three bananas',
        );

        $this->assertTrue($widget->isLength(3), 'Length is 3');

        $this->assertTrue($widget->isLength(0, 10), 'Length between 0 and 10, or said length less than 10');

        $this->assertTrue($widget->isLength(2, 0), 'Length greater than 2');*/
    }

}
